# - name: "build package"
#   shell: |
#     cd /home/ubuntu/backend
#     npm run build
# - name: "run migrations and save status to https://memstash.io/"
#   shell: |
#     cd /home/ubuntu/backend
#     npm run migrations > migrations.txt
#     cat migrations.txt
#     export CIRCLE_WORKFLOW_ID="{{ CIRCLE_WORKFLOW_ID }}"
#     echo CIRCLE_WORKFLOW_ID=${CIRCLE_WORKFLOW_ID}
#     curl -H "Content-Type: text/plain" -H "token: ${CIRCLE_WORKFLOW_ID}" --request PUT --data $( grep -c "No migrations are pending" migrations.txt ) https://api.memstash.io/values/migration_status
#   register: migration_output

# - debug:
#     msg: "{{ migration_output.stdout_lines }}"

# - name: "use pm2 to run the node server"
#   shell: |
#     cd /home/ubuntu/backend
#     pm2 start npm -- run "start:dev"

  
# ---
  - name: "show remote environment"
    shell: env

  - name: "copy backend binaries"
    become: yes
    synchronize:
      src: ../../backend/dist
      dest: /home/ubuntu/uda_app
      recursive: true

  - name: "copy node_modules"
    become: yes
    synchronize:
      src: ../../backend/node_modules
      dest: /home/ubuntu/uda_app
      recursive: true

  - name: "delete anything that might already be running"
    become: true
    command: pm2 delete all
    ignore_errors: true

  - name: "start server"
    become: true
    command: pm2 start -f ./main.js
    args:
      chdir: /home/ubuntu/uda_app/dist
    environment:
     ENVIRONMENT: production
     TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION') }}"
     TYPEORM_MIGRATIONS_DIR: "./migrations"
     TYPEORM_MIGRATIONS: "./migrations/*.js"
     TYPEORM_ENTITIES: "./modules/domain/**/*.entity.js"
     TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST') }}"
     TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT') }}"
     TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME') }}"
     TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD') }}"
     TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE') }}"
